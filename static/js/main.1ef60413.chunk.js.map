{"version":3,"sources":["components/InputForm/InputForm.js","components/Form/Form.js","components/Contacts/Contacts.js","components/Filter/Filter.js","App.js","index.js"],"names":["InputForm","id","name","number","onInputValue","onSubmit","className","value","onChange","type","pattern","title","required","onClick","protoTypes","PropTypes","string","isRequired","Form","state","contacts","event","currentTarget","find","contact","setState","alert","preventDefault","props","reset","this","nameInputId","Component","Contacts","map","arrayOf","shape","Filter","onInputFilter","App","addContact","uuidv4","deleteContact","newContacts","filter","filterInputValue","filteredContacts","toLowerCase","includes","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ef60413.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './InputForm.css';\r\n\r\nconst InputForm = ({ id, name, number, onInputValue, onSubmit }) => {\r\n  return (\r\n    <form className=\"Form\">\r\n      <label className=\"Label\">\r\n        Name\r\n        <input\r\n          id={id}\r\n          className=\"Input\"\r\n          value={name}\r\n          onChange={onInputValue}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <label className=\"Label\">\r\n        Number\r\n        <input\r\n          id={id}\r\n          className=\"Input\"\r\n          value={number}\r\n          onChange={onInputValue}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n        />\r\n      </label>\r\n\r\n      <button className=\"Button\" type=\"submit\" onClick={onSubmit}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nInputForm.protoTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default InputForm;\r\n","import React, { Component } from 'react';\r\nimport InputForm from '../InputForm';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\r\n    ],\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  onInputValue = event => {\r\n    const { name, value } = event.currentTarget;\r\n\r\n    if (this.state.contacts.find(contact => contact.name !== value)) {\r\n      this.setState({ [name]: value });\r\n    } else {\r\n      alert(name, `is already in contacts`);\r\n    }\r\n  };\r\n\r\n  onSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <InputForm\r\n        id={this.nameInputId}\r\n        name={name}\r\n        number={number}\r\n        onInputValue={this.onInputValue}\r\n        onSubmit={this.onSubmit}\r\n      ></InputForm>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Contacts.css';\r\n\r\nconst Contacts = ({ contacts, onSubmit }) => {\r\n  return (\r\n    <section className=\"Contacts\">\r\n      <ul className=\"ContactsList\">\r\n        {contacts.map(({ id, name, number }) => (\r\n          <li className=\"Item\" key={id}>\r\n            <span className=\"Name\">{name}:</span>\r\n            <span className=\"Number\">{number}</span>\r\n            <button\r\n              className=\"ButtonDelete\"\r\n              type=\"submit\"\r\n              onClick={onSubmit}\r\n              id={id}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nContacts.protoTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ).isRequired,\r\n};\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Filter.css';\r\n\r\nconst Filter = ({ onInputFilter }) => {\r\n  return (\r\n    <div>\r\n      <p className=\"FindTitle\">Find contacts by name</p>\r\n\r\n      <input\r\n        className=\"InputFilter\"\r\n        onChange={onInputFilter}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\n// Filter.protoTypes = {\r\n//     contacts: PropTypes.arrayOf(\r\n//       PropTypes.shape({\r\n//         id: PropTypes.string.isRequired,\r\n//         name: PropTypes.string.isRequired,\r\n//         number: PropTypes.string.isRequired,\r\n//       }),\r\n//     ).isRequired,\r\n// };\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\n// import InputForm from './components/InputForm';\nimport Form from './components/Form';\nimport Contacts from './components/Contacts';\nimport Filter from './components/Filter';\nimport { v4 as uuidv4 } from 'uuid';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    name: '',\n  };\n\n  // onInputValue = event => {\n  //   const { name, value } = event.currentTarget;\n  //   this.setState({ [name]: value });\n  // };\n\n  // onSubmit = event => {\n  //   // event.preventDefault();\n\n  //   this.onSubmit(this.state);\n  //   this.reset();\n  // };\n\n  // reset = () => {\n  //   this.setState({ name: '', number: '' });\n  // };\n\n  addContact = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      name: name,\n      number: number,\n    };\n\n    this.setState(({ contacts }) => ({\n      contacts: [contact, ...contacts],\n    }));\n  };\n\n  deleteContact = event => {\n    event.preventDefault();\n    const id = event.currentTarget.id;\n\n    const newContacts = this.state.contacts.filter(\n      contact => contact.id !== id,\n    );\n\n    this.setState({\n      contacts: [...newContacts],\n    });\n  };\n\n  onInputFilter = event => {\n    const filterInputValue = event.currentTarget.value;\n\n    const filteredContacts = this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterInputValue),\n    );\n\n    this.setState(\n      filterInputValue\n        ? {\n            contacts: [...filteredContacts],\n          }\n        : {\n            contacts: [...this.state.contacts],\n          },\n    );\n  };\n\n  render() {\n    const { contacts, name } = this.state;\n    console.log(contacts);\n\n    return (\n      <>\n        <h2 className=\"Title\">Phonebook</h2>\n\n        <Form onSubmit={this.addContact}></Form>\n        {/* <InputForm\n          id={this.nameInputId}\n          name={name}\n          number={number}\n          onSubmit={this.onSubmit}\n          onInputValue={this.onInputValue}\n        ></InputForm> */}\n\n        <h2 className=\"Title\">Contacts</h2>\n\n        <Filter onInputFilter={this.onInputFilter}></Filter>\n\n        <Contacts\n          contacts={contacts}\n          name={name}\n          onSubmit={this.deleteContact}\n        ></Contacts>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}